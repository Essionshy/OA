<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuhong.oa.mapper.EducationDOMapper">
  <resultMap id="BaseResultMap" type="com.yuhong.oa.entity.EducationDO">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="education_class" jdbcType="TINYINT" property="educationClass" />
    <result column="education" jdbcType="TINYINT" property="education" />
    <result column="education_type" jdbcType="VARCHAR" property="educationType" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="insitute" jdbcType="VARCHAR" property="insitute" />
    <result column="professor" jdbcType="VARCHAR" property="professor" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="VARCHAR" property="createrId" />
    <result column="modifier_id" jdbcType="VARCHAR" property="modifierId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_id, education_class, education, education_type, major, insitute, professor, 
    start_date, end_date, year, state, remark, creater_id, modifier_id, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.yuhong.oa.entity.EducationDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oa_emp_education
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yuhong.oa.entity.EducationDOExample">
    delete from oa_emp_education
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuhong.oa.entity.EducationDO">
    insert into oa_emp_education (id, emp_id, education_class, 
      education, education_type, major, 
      insitute, professor, start_date, 
      end_date, year, state, 
      remark, creater_id, modifier_id, 
      gmt_create, gmt_modified)
    values (#{id,jdbcType=BIGINT}, #{empId,jdbcType=VARCHAR}, #{educationClass,jdbcType=TINYINT}, 
      #{education,jdbcType=TINYINT}, #{educationType,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{insitute,jdbcType=VARCHAR}, #{professor,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP}, #{year,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=VARCHAR}, #{modifierId,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yuhong.oa.entity.EducationDO">
    insert into oa_emp_education
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="educationClass != null">
        education_class,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="educationType != null">
        education_type,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="insitute != null">
        insitute,
      </if>
      <if test="professor != null">
        professor,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="educationClass != null">
        #{educationClass,jdbcType=TINYINT},
      </if>
      <if test="education != null">
        #{education,jdbcType=TINYINT},
      </if>
      <if test="educationType != null">
        #{educationType,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="insitute != null">
        #{insitute,jdbcType=VARCHAR},
      </if>
      <if test="professor != null">
        #{professor,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuhong.oa.entity.EducationDOExample" resultType="java.lang.Long">
    select count(*) from oa_emp_education
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oa_emp_education
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.educationClass != null">
        education_class = #{record.educationClass,jdbcType=TINYINT},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=TINYINT},
      </if>
      <if test="record.educationType != null">
        education_type = #{record.educationType,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.insitute != null">
        insitute = #{record.insitute,jdbcType=VARCHAR},
      </if>
      <if test="record.professor != null">
        professor = #{record.professor,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        creater_id = #{record.createrId,jdbcType=VARCHAR},
      </if>
      <if test="record.modifierId != null">
        modifier_id = #{record.modifierId,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oa_emp_education
    set id = #{record.id,jdbcType=BIGINT},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      education_class = #{record.educationClass,jdbcType=TINYINT},
      education = #{record.education,jdbcType=TINYINT},
      education_type = #{record.educationType,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      insitute = #{record.insitute,jdbcType=VARCHAR},
      professor = #{record.professor,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      year = #{record.year,jdbcType=INTEGER},
      state = #{record.state,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      creater_id = #{record.createrId,jdbcType=VARCHAR},
      modifier_id = #{record.modifierId,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>